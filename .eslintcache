[{"/home/julien/Documents/Projects/React/Covid-statistics/src/index.jsx":"1","/home/julien/Documents/Projects/React/Covid-statistics/src/assets/styles.js":"2","/home/julien/Documents/Projects/React/Covid-statistics/src/App.jsx":"3","/home/julien/Documents/Projects/React/Covid-statistics/src/providers/UserProvider.jsx":"4","/home/julien/Documents/Projects/React/Covid-statistics/src/firebase.js":"5","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/HomePage.jsx":"6","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/CountryPage.jsx":"7","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/ProfilePage.jsx":"8","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/RegisterPage.jsx":"9","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/CountriesPage.jsx":"10","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/LoginPage.jsx":"11","/home/julien/Documents/Projects/React/Covid-statistics/src/hooks/useFetchForCountry.js":"12","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/CountriesTable.jsx":"13","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/NavBar.jsx":"14","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/Chart.jsx":"15"},{"size":324,"mtime":1611323879270,"results":"16","hashOfConfig":"17"},{"size":131,"mtime":1605625807837,"results":"18","hashOfConfig":"17"},{"size":1489,"mtime":1611324949482,"results":"19","hashOfConfig":"17"},{"size":1019,"mtime":1611324949490,"results":"20","hashOfConfig":"17"},{"size":2187,"mtime":1605625807837,"results":"21","hashOfConfig":"17"},{"size":134,"mtime":1611323879270,"results":"22","hashOfConfig":"17"},{"size":2256,"mtime":1611323879270,"results":"23","hashOfConfig":"17"},{"size":460,"mtime":1611324698726,"results":"24","hashOfConfig":"17"},{"size":111,"mtime":1611320791663,"results":"25","hashOfConfig":"17"},{"size":455,"mtime":1610127104122,"results":"26","hashOfConfig":"17"},{"size":108,"mtime":1611320791671,"results":"27","hashOfConfig":"17"},{"size":1116,"mtime":1605625807837,"results":"28","hashOfConfig":"17"},{"size":2085,"mtime":1611323879270,"results":"29","hashOfConfig":"17"},{"size":2486,"mtime":1611323879270,"results":"30","hashOfConfig":"17"},{"size":903,"mtime":1605625807837,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"199e64k",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/julien/Documents/Projects/React/Covid-statistics/src/index.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/assets/styles.js",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/App.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/providers/UserProvider.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/firebase.js",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/pages/HomePage.jsx",[],["67","68"],"/home/julien/Documents/Projects/React/Covid-statistics/src/pages/CountryPage.jsx",["69","70","71","72"],"\nimport {useCallback, useEffect, useState} from \"react\";\nimport {useFetchForCountry} from \"../hooks/useFetchForCountry\";\nimport Chart from \"../Components/Chart\";\nimport NavBar from \"../Components/NavBar\";\nimport {useParams} from \"react-router\";\n\nexport default function CountryPage(){\n    const countryCode = useParams()\n    const [loading, setLoading] = useState(false)\n    const [items, setItems] = useState([])\n    const [dataSummary, setDataSummary] = useState(null)\n    const load = useCallback(async () => {\n        setLoading(true)\n        const response = await fetch(`https://api.covid19api.com/total/dayone/country/${countryCode}/status/confirmed`, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        })\n        const responseData = await response.json()\n        if (response.ok) {\n            responseData.map(dataElement => setItems(items => [...items,  {x: dataElement.Date, y1: dataElement.Cases}]))\n        }\n\n        const countrySummary = await fetch(`https://api.covid19api.com/summary`, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        })\n        const countryData = await countrySummary.json()\n\n        if (countrySummary.ok) {\n            const countries = countryData.Countries\n            const summary = (countries.filter( function(item){return (item.CountryCode===countryCode.toUpperCase());} ))[0];\n            setDataSummary(dataSummary => summary)\n\n        }\n\n        setLoading(false)\n    });\n\n    useEffect(() => { load() }, [])\n\n    return(<>\n        <NavBar />\n    <header className=\"header\" />\n        {dataSummary && <div className=\"container-fluid\">\n            <div className=\"row d-flex justify-content-center align-items-center\">\n                <img src={`http://www.geognos.com/api/en/countries/flag/${dataSummary.CountryCode}.png`} className=\"countrybox\" />\n            </div>\n            <div className=\"row  d-flex justify-content-center\">\n                <h1 className=\"text-primary text-center\">{dataSummary.Country}</h1>\n            </div>\n    </div> }\n        <div className=\"container mt-3\">\n\n            <h1>Total Cases</h1>\n            {loading? <h1>Chargement</h1> : <Chart data={items}/> }\n        </div>\n    </>\n    )\n}\n","/home/julien/Documents/Projects/React/Covid-statistics/src/pages/ProfilePage.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/pages/RegisterPage.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/pages/CountriesPage.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/pages/LoginPage.jsx",[],"/home/julien/Documents/Projects/React/Covid-statistics/src/hooks/useFetchForCountry.js",["73","74"],"import {useCallback, useState} from \"react\";\n\nexport function  useFetchForCountry(url){\n    const [loading, setLoading] = useState(false)\n    const [items, setItems] = useState([])\n    const [count, setCount] = useState(0)\n    const [next, setNext] = useState(null)\n    const load = useCallback(async () =>{\n        setLoading((true))\n        const response = await fetch(next || url, {\n            headers: {\n                'Accept': 'application/ld+json'\n            }\n        })\n        const responseData = await response.json()\n        if(response.ok){\n            setItems(items => [...items, ...responseData])\n            // setCount(responseData['hydra:totalItems'])\n            ///   if(responseData['hydra:view']['hydra:next']){\n            ///       setNext(responseData['hydra:view']['hydra:next'])\n            ///   }else{\n            ///       setNext(null)\n            ///   }\n        } else{\n            alert('a problem occured')\n        }\n        setLoading(false)\n    }, [url, next])\n    return{\n        items,\n        load,\n        loading,\n        count,\n        hasMore: next != null\n    }\n\n}\n","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/CountriesTable.jsx",["75","76","77","78"],"\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport React, {useEffect, useState} from \"react\";\nimport { AgGridColumn, AgGridReact} from \"ag-grid-react\";\nimport {Flag} from \"semantic-ui-react\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function CountriesTable(){\n    const navigate = useHistory();\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n\n    const [rowData, setRowData] = useState([]);\n    useEffect(async function (){\n        const countries = await fetch('https://api.covid19api.com/summary');\n        const countriesData = await countries.json();\n        setRowData(countriesData.Countries);\n        console.log(countriesData.Countries)\n    },[])\n    function countryRow(country){\n        return { ...country,\n            flag: <Flag name={country.countryCode}/>\n            }\n        }\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    }\n\n    function handleClickRow(e){\n        navigate(`/country/${e.data.CountryCode}`)\n        }\n    return (\n        <div className=\"ag-theme-alpine\"  style={ { height: 1000, width: \"100%\" } }>\n            <AgGridReact\n                animateRows\n                onGridReady={onGridReady}\n                rowData={rowData}\n                onRowClicked={handleClickRow}\n                defaultColDef={{\n                    sortable: true,\n                    filter: true,\n                    headerComponentParams: {\n                        menuIcon: 'fa-bars'\n                    }\n                }}>\n                <AgGridColumn field=\"Country\"/>\n                <AgGridColumn field=\"NewConfirmed\"/>\n                <AgGridColumn field=\"NewDeaths\"/>\n                <AgGridColumn field=\"NewRecovered\"/>\n                <AgGridColumn field=\"TotalConfirmed\"/>\n                <AgGridColumn field=\"TotalDeaths\"/>\n                <AgGridColumn field=\"TotalRecovered\"/>\n            </AgGridReact>\n        </div>\n    );\n}\n","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/NavBar.jsx",["79","80","81","82","83"],"import React, {useContext} from 'react'\nimport {UserContext} from \"../providers/UserProvider\";\nimport {signOut} from \"../firebase\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function NavBar()\n{\n    const user = useContext(UserContext);\n    const navigate = useHistory\n    const handleClick = function (e) {\n        navigate('/signin')\n    }\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/countries\">Countries</a>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                           data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Dropdown\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                            <div className=\"dropdown-divider\"></div>\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                        </div>\n                    </li>\n                    <li className=\"nav-item\">\n                        { user ? <button className=\"btn btn-danger\" onClick={() =>{signOut()}}>SignOut</button>:\n                            <button className=\"btn btn-success\" onClick={handleClick}>SignIn</button>\n                        }\n                    </li>\n                </ul>\n\n            </div>\n        </nav>\n    )\n}\n","/home/julien/Documents/Projects/React/Covid-statistics/src/Components/Chart.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":9,"nodeType":"90","messageId":"91","endLine":3,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":13,"column":18,"nodeType":"90","endLine":13,"endColumn":29},{"ruleId":"92","severity":1,"message":"94","line":42,"column":33,"nodeType":"95","endLine":42,"endColumn":35,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":49,"column":17,"nodeType":"99","endLine":49,"endColumn":131},{"ruleId":"88","severity":1,"message":"100","line":6,"column":19,"nodeType":"90","messageId":"91","endLine":6,"endColumn":27},{"ruleId":"88","severity":1,"message":"101","line":7,"column":18,"nodeType":"90","messageId":"91","endLine":7,"endColumn":25},{"ruleId":"88","severity":1,"message":"102","line":12,"column":12,"nodeType":"90","messageId":"91","endLine":12,"endColumn":19},{"ruleId":"88","severity":1,"message":"103","line":13,"column":12,"nodeType":"90","messageId":"91","endLine":13,"endColumn":25},{"ruleId":"92","severity":1,"message":"104","line":16,"column":15,"nodeType":"105","endLine":21,"endColumn":6},{"ruleId":"88","severity":1,"message":"106","line":22,"column":14,"nodeType":"90","messageId":"91","endLine":22,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":15,"column":13,"nodeType":"99","endLine":15,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":31,"column":25,"nodeType":"99","endLine":32,"endColumn":94},{"ruleId":"107","severity":1,"message":"108","line":36,"column":29,"nodeType":"99","endLine":36,"endColumn":67},{"ruleId":"107","severity":1,"message":"108","line":37,"column":29,"nodeType":"99","endLine":37,"endColumn":67},{"ruleId":"107","severity":1,"message":"108","line":39,"column":29,"nodeType":"99","endLine":39,"endColumn":67},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useFetchForCountry' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setCount' is assigned a value but never used.","'setNext' is assigned a value but never used.","'gridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","'countryRow' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [load]",{"range":"114","text":"115"},[1538,1540],"[load]"]